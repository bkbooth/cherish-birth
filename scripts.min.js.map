{"version":3,"sources":["script.js"],"names":["onReady","$","onSubmit","event","form","target","fields","validateInputs","preventDefault","isLteIe9","formData","reduce","data","field","value","ajax","url","action","type","method","dataType","success","onSubmitSuccess","bind","error","onSubmitError","complete","onSubmitComplete","addClass","removeClass","find","propMethod","valid","forEach","parent","onInputFocus","onInputBlur","onInputChange","input","$parent","hasClass","$emailInput","email","$emailParent","name","length","on","each","_","$input","document","activeElement","first","window","Zepto","jQuery"],"mappings":"AAKA,QAAAA,SAAAC,GAeA,QAAAC,GAAAC,GACA,GAAAC,GAAAD,EAAAE,OACAC,GAAA,OAAA,QAAA,cAAA,UAAA,MAAA,WAAA,UACA,KAAAC,EAAAH,EAAAE,GACA,MAAAH,GAAAK,gBAIA,KAAAC,EAAA,CAGAN,EAAAK,gBAGA,IAAAE,GAAAJ,EAAAK,OAAA,SAAAC,EAAAC,GAEA,MADAD,GAAAC,GAAAT,EAAAS,GAAAC,OAAA,KACAF,MAGAX,GAAAc,MACAC,IAAAZ,EAAAa,OACAC,KAAAd,EAAAe,OACAP,KAAAF,EACAU,SAAA,OACAC,QAAAC,EAAAC,KAAA,KAAAnB,GACAoB,MAAAC,EAAAF,KAAA,KAAAnB,GACAsB,SAAAC,EAAAJ,KAAA,KAAAnB,KAGAH,EAAAG,GACAwB,SAAA,cACAC,YAAA,kCACAC,KAAA,uBACAC,GAAA,YAAA,IAQA,QAAAT,GAAAlB,GACAH,EAAAG,GAAAwB,SAAA,gBAQA,QAAAH,GAAArB,GACAH,EAAAG,GACAwB,SAAA,qBACAE,KAAA,uBACAC,GAAA,YAAA,GAQA,QAAAJ,GAAAvB,GACAH,EAAAG,GAAAyB,YAAA,cAWA,QAAAtB,GAAAH,EAAAE,GACA,GAAA0B,IAAA,CAUA,OAPA1B,GAAA2B,QAAA,SAAApB,GACAZ,EAAAG,EAAAS,IAAAkB,GAAA,cAAA3B,EAAAS,GAAAC,QACAkB,GAAA,EACA/B,EAAAG,EAAAS,IAAAqB,SAAAN,SAAA,iBAIAI,EAoCA,QAAAG,GAAAhC,GACAF,EAAAE,EAAAE,QAAA6B,SAAAN,SAAA,cAQA,QAAAQ,GAAAjC,GACAF,EAAAE,EAAAE,QAAA6B,SAAAL,YAAA,cAQA,QAAAQ,GAAAlC,GACA,GAAAmC,GAAAnC,EAAAE,OACAkC,EAAAtC,EAAAqC,GAAAJ,QAGAI,GAAAxB,QAAAyB,EAAAC,SAAA,YACAD,EAAAX,SAAA,aACAU,EAAAxB,OAAAyB,EAAAC,SAAA,aACAD,EAAAV,YAAA,YAIAS,EAAAxB,OAAAyB,EAAAC,SAAA,aACAD,EAAAV,YAAA,aAIA,IAAAY,GAAAxC,EAAAqC,EAAAlC,KAAAsC,OACAC,EAAAF,EAAAP,QACA,iBAAAI,EAAAM,OACAH,EAAAV,GAAA,YAAAO,EAAAxB,QACA2B,EAAAV,GAAA,aAAAY,EAAAH,SAAA,eACAG,EAAAd,YAAA,eA/KA,GAAApB,GAAAR,EAAA,QAAAuC,SAAA,WACAT,EAAAtB,EAAA,OAAA,OAEAL,EAAAH,EAAA,eACAG,GAAAyC,SACAzC,EAAA0C,GAAA,SAAA5C,GAsGA,SAAAE,GACAH,EAAAG,GACA0B,KAAA,iDACAiB,KAAA,SAAAC,EAAAV,GACA,GAAAW,GAAAhD,EAAAqC,GACAC,EAAAU,EAAAf,QAEAe,GAAAH,GAAA,QAAAX,GACAc,EAAAH,GAAA,OAAAV,GACAa,EAAAH,GAAA,QAAAT,GAGAC,IAAAY,SAAAC,eACAZ,EAAAX,SAAA,cAIAU,EAAAxB,OACAyB,EAAAX,SAAA,eAvHAxB,EAAAgD,UA+KAC,OAAAC,MACAA,MAAAtD,SAEAuD,OAAAvD","file":"scripts.min.js","sourcesContent":["/**\n * Bootstrap application\n *\n * @param {function} $\n */\nfunction onReady($) {\n  var isLteIe9 = $('html').hasClass('lte-ie9');\n  var propMethod = isLteIe9 ? 'attr' : 'prop';\n\n  var form = $('form#contact');\n  if (form.length) {\n    form.on('submit', onSubmit);\n    setupInputListeners(form.first());\n  }\n\n  /**\n   * Handle contact form submissions\n   *\n   * @param {Event} event\n   */\n  function onSubmit(event) {\n    var form = /** @type {HTMLFormElement} */ event.target;\n    var fields = ['name', 'email', 'phoneNumber', 'message', '_cc', '_subject', '_gotcha'];\n    if (!validateInputs(form, fields)) {\n      return event.preventDefault();\n    }\n\n    // Use normal HTTP form submission for <IE10\n    if (isLteIe9) {\n      return;\n    } else {\n      event.preventDefault();\n    }\n\n    var formData = fields.reduce(function _reduce(data, field) {\n      data[field] = form[field].value || null;\n      return data;\n    }, {});\n\n    $.ajax({\n      url: form.action,\n      type: form.method,\n      data: formData,\n      dataType: 'json',\n      success: onSubmitSuccess.bind(null, form),\n      error: onSubmitError.bind(null, form),\n      complete: onSubmitComplete.bind(null, form),\n    });\n\n    $(form)\n      .addClass('is-sending')\n      .removeClass('is-submitted failed-submitting')\n      .find('button[type=submit]')\n      [propMethod]('disabled', true);\n  }\n\n  /**\n   * Successfully submitted contact form\n   *\n   * @param {HTMLFormElement} form\n   */\n  function onSubmitSuccess(form) {\n    $(form).addClass('is-submitted');\n  }\n\n  /**\n   * Failed submitting contact form\n   *\n   * @param {HTMLFormElement} form\n   */\n  function onSubmitError(form) {\n    $(form)\n      .addClass('failed-submitting')\n      .find('button[type=submit]')\n      [propMethod]('disabled', false);\n  }\n\n  /**\n   * Completed (success or fail) submitting contact form\n   *\n   * @param {HTMLFormElement} form\n   */\n  function onSubmitComplete(form) {\n    $(form).removeClass('is-sending');\n  }\n\n  /**\n   * Validate form fields\n   *\n   * @param {HTMLFormElement} form\n   * @param {Array<string>}   fields\n   *\n   * @returns {boolean}\n   */\n  function validateInputs(form, fields) {\n    var valid = true;\n\n    // Validate 'required' fields\n    fields.forEach(function _forEach(field) {\n      if ($(form[field])[propMethod]('required') && !form[field].value) {\n        valid = false;\n        $(form[field]).parent().addClass('is-invalid');\n      }\n    });\n\n    return valid;\n  }\n\n  /**\n   * Setup focus/blur and input event listeners to form inputs\n   *\n   * @param {HTMLFormElement} form\n   */\n  function setupInputListeners(form) {\n    $(form)\n      .find('input[type=text], input[type=email], textarea')\n      .each(function _each(_, input) {\n        var $input = $(input);\n        var $parent = $input.parent();\n\n        $input.on('focus', onInputFocus);\n        $input.on('blur', onInputBlur);\n        $input.on('input', onInputChange);\n\n        // Firefox doesn't fire initial 'focus' event\n        if (input === document.activeElement) {\n          $parent.addClass('is-focused');\n        }\n\n        // When navigating back/forward, form inputs might already have a value\n        if (input.value) {\n          $parent.addClass('is-dirty');\n        }\n      });\n  }\n\n  /**\n   * Add the 'is-focused' class on focus\n   *\n   * @param {FocusEvent} event\n   */\n  function onInputFocus(event) {\n    $(event.target).parent().addClass('is-focused');\n  }\n\n  /**\n   * Remove the 'is-focused' class on blur\n   *\n   * @param {FocusEvent} event\n   */\n  function onInputBlur(event) {\n    $(event.target).parent().removeClass('is-focused');\n  }\n\n  /**\n   * Add/remove classes when input changes\n   *\n   * @param {InputEvent} event\n   */\n  function onInputChange(event) {\n    var input = event.target;\n    var $parent = $(input).parent();\n\n    // Add/remove the 'is-dirty' class\n    if (input.value && !$parent.hasClass('is-dirty')) {\n      $parent.addClass('is-dirty');\n    } else if (!input.value && $parent.hasClass('is-dirty')) {\n      $parent.removeClass('is-dirty');\n    }\n\n    // Remove the 'is-invalid' class\n    if (input.value && $parent.hasClass('is-dirty')) {\n      $parent.removeClass('is-invalid');\n    }\n\n    // If phone number entered, remove 'required' from email field\n    var $emailInput = $(input.form.email);\n    var $emailParent = $emailInput.parent();\n    if (input.name === 'phoneNumber') {\n      $emailInput[propMethod]('required', !input.value);\n      if (!$emailInput[propMethod]('required') && $emailParent.hasClass('is-invalid')) {\n        $emailParent.removeClass('is-invalid');\n      }\n    }\n  }\n}\n\nif (window.Zepto) {\n  Zepto(onReady);\n} else {\n  jQuery(onReady);\n}\n"]}